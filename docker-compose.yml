version: "3"

services:
  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
    container_name: nextjs
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - backend

  # Backend (Strapi)
  backend:
    container_name: strapi
    build:
      context: ./backend
    image: strapi:latest
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./backend/config:/opt/app/config
      - ./backend/src:/opt/app/src
      - ./backend/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - app_network
    depends_on:
      - strapiDB

  # MySQL Database for Strapi
  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 # for compatibility on Apple M1/M2 chips
    restart: unless-stopped
    env_file: ./backend/.env
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/mysql
    networks:
      - app_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network
    depends_on:
      - frontend
      - backend

volumes:
  strapi-data:

networks:
  app_network:
    driver: bridge
